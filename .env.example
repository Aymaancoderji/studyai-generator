# API Keys
OPENAI_API_KEY=your_openai_api_key_here
GROQ_API_KEY=your_groq_api_key_here

# Model Configuration
OPENAI_MODEL=gpt-3.5-turbo
GROQ_MODEL=llama-3.1-70b-versatile

# Database
DATABASE_PATH=data/studyai.db

# Application Settings
MAX_TOKENS=2000
TEMPERATURE=0.7
DEBUG=False
```

---

### File 5: `setup.sh`

**Filename:** `setup.sh`

**Instructions:**
- Find artifact titled **"setup.sh"**
- Copy all content
- Paste and commit

---

### File 6: `sample_content.txt`

**Filename:** `sample_content.txt`

**Instructions:**
- Find artifact titled **"sample_content.txt"**
- Copy all content (the photosynthesis text)
- Paste and commit

---

### File 7: Replace `README.md`

**Instructions:**
1. Click on the existing `README.md` file in your repo
2. Click the pencil icon (✏️) to edit
3. Delete all existing content
4. Find my artifact titled **"README.md"**
5. Copy ALL content and paste
6. Scroll down, click **"Commit changes"**

---

### File 8: `QUICKSTART.md`

**Filename:** `QUICKSTART.md`

**Instructions:**
- Find artifact titled **"QUICKSTART.md"**
- Copy all content
- Create new file and paste
- Commit

---

### File 9: `PROJECT_STRUCTURE.md`

**Filename:** `PROJECT_STRUCTURE.md`

**Instructions:**
- Find artifact titled **"PROJECT_STRUCTURE.md"**
- Copy all content
- Create new file and paste
- Commit

---

### File 10: `FILE_CHECKLIST.md`

**Filename:** `FILE_CHECKLIST.md`

**Instructions:**
- Find artifact titled **"FILE_CHECKLIST.md"**
- Copy all content
- Create new file and paste
- Commit

---

### File 11: `DEPLOYMENT_GUIDE.md`

**Filename:** `DEPLOYMENT_GUIDE.md`

**Instructions:**
- Find artifact titled **"DEPLOYMENT_GUIDE.md"**
- Copy all content
- Create new file and paste
- Commit

---

## 🎯 PART 4: Upload Config Files

### File 12: `config/settings.py`

**Filename:** `config/settings.py`

**Instructions:**
- Click **"Add file"** → **"Create new file"**
- Type: `config/settings.py`
- Find artifact titled **"config/settings.py"**
- Copy and paste all content
- Commit

---

## 🎯 PART 5: Upload Core Files

### File 13: `core/ai_providers.py`

**Filename:** `core/ai_providers.py`

**Instructions:**
- Create new file: `core/ai_providers.py`
- Find artifact titled **"core/ai_providers.py"**
- Copy and paste
- Commit

### File 14: `core/document_parser.py`

**Filename:** `core/document_parser.py`

**Instructions:**
- Create new file: `core/document_parser.py`
- Find artifact titled **"core/document_parser.py"**
- Copy and paste
- Commit

### File 15: `core/generator.py`

**Filename:** `core/generator.py`

**Instructions:**
- Create new file: `core/generator.py`
- Find artifact titled **"core/generator.py"**
- Copy and paste
- Commit

### File 16: `core/benchmarking.py`

**Filename:** `core/benchmarking.py`

**Instructions:**
- Create new file: `core/benchmarking.py`
- Find artifact titled **"core/benchmarking.py"**
- Copy and paste
- Commit

---

## 🎯 PART 6: Upload Database Files

### File 17: `database/db_manager.py`

**Filename:** `database/db_manager.py`

**Instructions:**
- Create new file: `database/db_manager.py`
- Find artifact titled **"database/db_manager.py"**
- Copy and paste
- Commit

---

## 🎯 PART 7: Upload Utils Files

### File 18: `utils/concept_mapper.py`

**Filename:** `utils/concept_mapper.py`

**Instructions:**
- Create new file: `utils/concept_mapper.py`
- Find artifact titled **"utils/concept_mapper.py"**
- Copy and paste
- Commit

### File 19: `utils/scoring.py`

**Filename:** `utils/scoring.py`

**Instructions:**
- Create new file: `utils/scoring.py`
- Find artifact titled **"utils/scoring.py"**
- Copy and paste
- Commit

---

## 🎯 PART 8: Final Touches

### Step 10: Add Topics/Tags

1. Go to your repository main page
2. Click the ⚙️ gear icon next to "About" (top right)
3. In "Topics", add these one by one:
   - `ai`
   - `edtech`
   - `study-tools`
   - `openai`
   - `groq`
   - `streamlit`
   - `python`
   - `education`
   - `hackathon`
4. Click "Save changes"

---

## ✅ Final Checklist

Go to your repository and verify you see:
```
studyai/
├── .github/
│   └── workflows/
│       └── test.yml ✅
├── config/
│   ├── __init__.py ✅
│   └── settings.py ✅
├── core/
│   ├── __init__.py ✅
│   ├── ai_providers.py ✅
│   ├── benchmarking.py ✅
│   ├── document_parser.py ✅
│   └── generator.py ✅
├── database/
│   ├── __init__.py ✅
│   └── db_manager.py ✅
├── utils/
│   ├── __init__.py ✅
│   ├── concept_mapper.py ✅
│   └── scoring.py ✅
├── .env.example ✅
├── .gitignore ✅
├── DEPLOYMENT_GUIDE.md ✅
├── FILE_CHECKLIST.md ✅
├── LICENSE ✅
├── PROJECT_STRUCTURE.md ✅
├── QUICKSTART.md ✅
├── README.md ✅
├── requirements.txt ✅
├── sample_content.txt ✅
├── setup.sh ✅
├── streamlit_app.py ✅
└── studyai.py ✅
